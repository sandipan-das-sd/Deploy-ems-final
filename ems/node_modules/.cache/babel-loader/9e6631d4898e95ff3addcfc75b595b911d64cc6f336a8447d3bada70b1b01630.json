{"ast":null,"code":"var _jsxFileName = \"E:\\\\EMS ARDENT FINAL GITHUB\\\\ems\\\\src\\\\components\\\\Addsalary.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import Footer from \"./Footer\";\n// import { Link, useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n// import axios from \"axios\";\n\n// export default function Addsalary() {\n//   const [users, setUsers] = useState([]);\n//  const [formData,setFormData]=useState({\n//       basic_salary:\"\",\n//       allowance:\"\",\n//  })\n//  const navigate=useHistory()\n//  useEffect(() => {\n//   const fetchUsers = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:3001/staffList\");\n//       setUsers(res.data);\n//     } catch (err) {\n//       console.log(\"Error fetching details\", err);\n//     }\n//   };\n\n//   fetchUsers();\n// }, []);\n//  const handleChange=(event)=>{\n//   let oldData={...formData}\n//   let inputValue=event.target.value;\n//   let inputName=event.target.name;\n//   oldData[inputName] = inputValue;\n//   setFormData(oldData)\n// };\n// function calculate(){\n//   let basicSalary=document.getElementById(\"basicSalary\").value;\n//   let alloWance= document.getElementById(\"alloWance\").value;\n//   var totalSalary=(basicSalary+alloWance)\n//   console.log(totalSalary);\n//   // id=\"total\"\n//  var  salary=document.getElementById(\"total\")\n//  salary.innerHTML=totalSalary;\n\n// }\n// const handleSubmit=async(e)=>{\n//   e.preventDefault();\n//   if(validateForm()){\n\n//     try{\n//       const response=await axios.post(\"http://localhost:3001/addSalary\",formData);\n//       if(response.status===201){\n//         alert(\"Salary Added Succesfully!!!\")\n//         navigate.push('/manageSalary');\n//       }\n//       else\n//       {\n//         alert(\"Error adding salary details\")\n//       }\n//     } catch(error){\n//           // Handle error response\n//           if (error.response && error.response.status === 400) {\n//             alert(error.response.data.error); // Display the error message to the user\n//             alert(\"Error adding staffs for duplicate value. Try again with updated Data\");\n//           } else {\n//             console.error(\"Error adding staff:\", error);\n//           }\n//     }\n//   }\n// //Handel form submission\n\n// let currentUserFormData={\n//   basic_salary:formData.basic_salary,\n//   allowance:formData.allowance\n// };\n\n// let oldUserdata=[...users,currentUserFormData];\n// setUsers(oldUserdata)\n// console.log(formData)\n\n// //To empty the input fields after adding/getting the data\n// setFormData ({\n// basic_salary:\"\",\n// allowance:\"\",\n\n// })\n// }\n\n// const validateForm=()=>{\n//   const {\n//     basic_salary,\n//     allowance,\n//   }=formData;\n\n// const errors={};\n// if(!basic_salary.trim()){\n//   errors.basic_salary=\"Basic Salary is required\";\n//   document.getElementById(\"basic_salary\").focus();\n// } \n// else if(!allowance.trim()){\n//   errors.allowance=\"Allowance is required\";\n//   document.getElementById(\"allowance\").focus();\n// }\n\n// if (Object.keys(errors).length === 0) {\n//   return true;\n// } else {\n//   alert(Object.values(errors)[0]);\n//   return false;\n// }\n\n// };\n\n//   function calculate() {\n//     let n1 = parseInt(document.getElementById(\"basic_salary\").value);\n//     let n2 = parseInt(document.getElementById(\"allowance\").value);\n//     let sum = n1 + n2;\n//     document.getElementById(\"total\").value = sum;\n//   }\n\n//   return (\n//     <>\n//       <nav\n//         className=\"navbar navbar-expand-lg\"\n//         style={{ backgroundColor: \"rgb(0 77 255 / 65%)\" }}\n//       >\n//         {/* Navbar content */}\n//       </nav>\n//       <div className=\"container my-2\">\n//         <h2>Salary</h2>\n//       </div>\n//       <div className=\"container-fluid pt-3\" style={{ padding: \"100px\" }}>\n//         <div className=\"row d-flex justify-content-evenly\">\n//           <div style={{ background: \"white\", padding: \"21px\", borderTop: \"5px solid #004dffe8\", borderRadius: \"5px\" }}>\n//             <h5 style={{ fontSize: \"20px\" }} className=\"px-2\">\n//               Add Salary\n//             </h5>\n//             <hr />\n//             <div className=\"container\">\n//               <div className=\"row\">\n//                 <div className=\"col-md-4\">\n//                   <div className=\"mb-3\">\n//                     <b className=\"\">Department Name</b>\n//                     <select\n//                       className=\"form-control\"\n//                       style={{ border: \"1px solid\" }}\n//                     >\n//                       <option disabled defaultValue={\"--Department Name--\"}>\n//                         --Department Name--\n//                       </option>\n//                       <option>Backend developement</option>\n//                       <option>Designing</option>\n//                       <option>Front-end developement</option>\n//                       <option>Marketing</option>\n//                       <option>Finance</option>\n//                     </select>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"container m-3\">\n//               <div className=\"row p-3\">\n//                 {users.length > 0 ? (\n//                   <table>\n//                     <thead>\n//                       <tr>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\n//                           Staff\n//                         </th>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\n//                           Basic Salary($)\n//                         </th>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\n//                           Allowance($)\n//                         </th>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\n//                           Total($)\n//                         </th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {users.map((user, index) => (\n//                         <tr key={index}>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             {user.user_name}\n//                           </td>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             <input\n//                               type=\"text\"\n\n//                               id=\"basic_salary\"\n//                               name=\"basic_salary\"\n//                               placeholder=\"Enter the basic amount\"\n//                               value={formData.basic_salary}\n//                               onChange={handleChange}\n//                               onSubmit={handleSubmit}\n\n//                               style={{ width: \"100%\" }}\n//                             />\n//                           </td>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             <input\n//                               type=\"text\"\n//                               id=\"allowance\"\n//                               name=\"allowance\"\n//                               placeholder=\"Enter the basic amount\"\n//                               value={formData.allowance}\n//                               onChange={handleChange}\n//                               onSubmit={handleSubmit}\n//                               style={{ width: \"100%\" }}\n//                             />\n//                             {/* {error.allowance && <div className=\"text-danger\">{errors.allowance}</div>} */}\n//                           </td>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             <input\n//                               type=\"text\"\n//                               id=\"total\"\n//                               onChange={calculate}\n\n//                               readOnly\n//                               style={{ width: \"100%\" }}\n//                             />\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 ) : (\n//                   <div>No data available</div>\n//                 )}\n//               </div>\n//             </div>\n//             <div className=\"container\">\n//               <button\n//                 type=\"submit\"\n//                 className=\"btn btn-success float-end\"\n//                 onClick={handleSubmit}\n//                 onSubmit={handleSubmit}\n//               >\n//                 Submit\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <Footer footerstyle=\"fixed-bottom\" />\n//     </>\n//   );\n// }\n// import React, { useEffect, useState } from \"react\";\n// import Footer from \"./Footer\";\n// import { useHistory } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// export default function AddSalary() {\n//   const [users, setUsers] = useState([]);\n//   const [formData, setFormData] = useState({\n//     basic_salary: \"\",\n//     allowance: \"\"\n//   });\n//   const [errors, setErrors] = useState({});\n//   const navigate = useHistory();\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const res = await axios.get(\"http://localhost:3001/staffList\");\n//         setUsers(res.data);\n//       } catch (err) {\n//         console.log(\"Error fetching details\", err);\n//       }\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const calculate = () => {\n//     const basicSalary = parseInt(formData.basic_salary);\n//     const allowance = parseInt(formData.allowance);\n//     const totalSalary = basicSalary + allowance;\n//     console.log(totalSalary);\n//     const salary = document.getElementById(\"total\");\n//     salary.value = totalSalary;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (validateForm()) {\n//       try {\n//         const response = await axios.post(\"http://localhost:3001/addSalary\", formData);\n//         if (response.status === 201) {\n//           alert(\"Salary Added Successfully!!!\");\n//           navigate.push('/manageSalary');\n//         } else {\n//           alert(\"Error adding salary details\");\n//         }\n//       } catch (error) {\n//         if (error.response && error.response.status === 400) {\n//           alert(error.response.data.error);\n//           alert(\"Error adding staffs for duplicate value. Try again with updated Data\");\n//         } else {\n//           console.error(\"Error adding staff:\", error);\n//         }\n//       }\n//     }\n//   };\n\n//   const validateForm = () => {\n//     const { basic_salary, allowance } = formData;\n//     const errors = {};\n\n//     if (!basic_salary.trim()) {\n//       errors.basic_salary = \"Basic Salary is required\";\n//     }\n//     if (!allowance.trim()) {\n//       errors.allowance = \"Allowance is required\";\n//     }\n\n//     setErrors(errors);\n//     return Object.keys(errors).length === 0;\n//   };\n\n//   return (\n//     <>\n//       <nav className=\"navbar navbar-expand-lg\" style={{ backgroundColor: \"rgb(0 77 255 / 65%)\" }}>\n//         {/* Navbar content */}\n//       </nav>\n//       <div className=\"container my-2\">\n//         <h2>Salary</h2>\n//       </div>\n//       <div className=\"container-fluid pt-3\" style={{ padding: \"100px\" }}>\n//         <div className=\"row d-flex justify-content-evenly\">\n//           <div style={{ background: \"white\", padding: \"21px\", borderTop: \"5px solid #004dffe8\", borderRadius: \"5px\" }}>\n//             <h5 style={{ fontSize: \"20px\" }} className=\"px-2\">Add Salary</h5>\n//             <hr />\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"container m-3\">\n//                 <div className=\"row p-3\">\n//                   <table>\n//                     <thead>\n//                       <tr>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Staff</th>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Basic Salary($)</th>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Allowance($)</th>\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Total($)</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {users.map((user, index) => (\n//                         <tr key={index}>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">{user.user_name}</td>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             <input\n//                               type=\"text\"\n//                               name=\"basic_salary\"\n//                               value={formData.basic_salary}\n//                               onChange={handleChange}\n//                               placeholder=\"Enter the basic amount\"\n//                               style={{ width: \"100%\" }}\n//                             />\n//                             {errors.basic_salary && <div className=\"text-danger\">{errors.basic_salary}</div>}\n//                           </td>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             <input\n//                               type=\"text\"\n//                               name=\"allowance\"\n//                               value={formData.allowance}\n//                               onChange={handleChange}\n//                               placeholder=\"Enter the basic amount\"\n//                               style={{ width: \"100%\" }}\n//                             />\n//                             {errors.allowance && <div className=\"text-danger\">{errors.allowance}</div>}\n//                           </td>\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\n//                             <input\n//                               type=\"text\"\n//                               id=\"total\"\n//                               onChange={calculate}\n//                               readOnly\n//                               style={{ width: \"100%\" }}\n//                             />\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n//               <div className=\"container\">\n//                 <button\n//                   type=\"submit\"\n//                   className=\"btn btn-success float-end\"\n//                 >\n//                   Submit\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//       <Footer footerstyle=\"fixed-bottom\" />\n//     </>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"./Footer\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddSalary() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [formData, setFormData] = useState({\n    basic_salary: \"\",\n    allowance: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useHistory();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/staffList\");\n        setUsers(res.data);\n      } catch (err) {\n        console.log(\"Error fetching details\", err);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleChange = (event, userId) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const updatedUsers = users.map(user => {\n      if (user._id === userId) {\n        return {\n          ...user,\n          [name]: value\n        };\n      }\n      return user;\n    });\n    setUsers(updatedUsers);\n  };\n  const calculateTotal = (basicSalary, allowance) => {\n    const total = parseInt(basicSalary) + parseInt(allowance);\n    return isNaN(total) ? \"\" : total;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        const response = await axios.post(\"http://localhost:3001/addSalary\", users);\n        if (response.status === 201) {\n          alert(\"Salary Added Successfully!!!\");\n          navigate.push('/manageSalary');\n        } else {\n          alert(\"Error adding salary details\");\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          alert(error.response.data.error);\n          alert(\"Error adding staffs for duplicate value. Try again with updated Data\");\n        } else {\n          console.error(\"Error adding staff:\", error);\n        }\n      }\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    users.forEach(user => {\n      if (!user.basic_salary.trim()) {\n        errors[user._id] = {\n          ...errors[user._id],\n          basic_salary: \"Basic Salary is required\"\n        };\n      }\n      if (!user.allowance.trim()) {\n        errors[user._id] = {\n          ...errors[user._id],\n          allowance: \"Allowance is required\"\n        };\n      }\n    });\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg\",\n      style: {\n        backgroundColor: \"rgb(0 77 255 / 65%)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid pt-3\",\n      style: {\n        padding: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-evenly\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"white\",\n            padding: \"21px\",\n            borderTop: \"5px solid #004dffe8\",\n            borderRadius: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            className: \"px-2\",\n            children: \"Add Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container m-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row p-3\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"col-md-3 text-center bg- p-1 px-2 tablestyle\",\n                        children: \"Staff\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"col-md-3 text-center bg- p-1 px-2 tablestyle\",\n                        children: \"Basic Salary($)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"col-md-3 text-center bg- p-1 px-2 tablestyle\",\n                        children: \"Allowance($)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"col-md-3 text-center bg- p-1 px-2 tablestyle\",\n                        children: \"Total($)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: users.map(user => {\n                      var _errors$user$_id, _errors$user$_id2;\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"col-md-3 bg- p-1 px-2 tablestyle\",\n                          children: user.user_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 523,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"col-md-3 bg- p-1 px-2 tablestyle\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            name: \"basic_salary\",\n                            value: formData.basic_salary,\n                            onChange: e => handleChange(e, user._id),\n                            placeholder: \"Enter the basic amount\",\n                            style: {\n                              width: \"100%\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 525,\n                            columnNumber: 29\n                          }, this), ((_errors$user$_id = errors[user._id]) === null || _errors$user$_id === void 0 ? void 0 : _errors$user$_id.basic_salary) && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-danger\",\n                            children: errors[user._id].basic_salary\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 533,\n                            columnNumber: 64\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 524,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"col-md-3 bg- p-1 px-2 tablestyle\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            id: \"allowance\",\n                            name: \"allowance\",\n                            value: formData.allowance,\n                            onChange: e => handleChange(e, user._id),\n                            placeholder: \"Enter the allowance\",\n                            style: {\n                              width: \"100%\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 536,\n                            columnNumber: 29\n                          }, this), ((_errors$user$_id2 = errors[user._id]) === null || _errors$user$_id2 === void 0 ? void 0 : _errors$user$_id2.allowance) && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-danger\",\n                            children: errors[user._id].allowance\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 545,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 535,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"col-md-3 bg- p-1 px-2 tablestyle\",\n                          children: /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            value: calculateTotal(user.basic_salary, user.allowance),\n                            readOnly: true,\n                            style: {\n                              width: \"100%\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 548,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 547,\n                          columnNumber: 27\n                        }, this)]\n                      }, user._id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 25\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success float-end\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      footerstyle: \"fixed-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AddSalary, \"zZl+yRmTOnE+39G5MJcvH6R9kXw=\", false, function () {\n  return [useHistory];\n});\n_c = AddSalary;\nvar _c;\n$RefreshReg$(_c, \"AddSalary\");","map":{"version":3,"names":["React","useEffect","useState","Footer","useHistory","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AddSalary","_s","users","setUsers","formData","setFormData","basic_salary","allowance","errors","setErrors","navigate","fetchUsers","res","get","data","err","console","log","handleChange","event","userId","name","value","target","updatedUsers","map","user","_id","calculateTotal","basicSalary","total","parseInt","isNaN","handleSubmit","e","preventDefault","validateForm","response","post","status","alert","push","error","forEach","trim","Object","keys","length","children","className","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","padding","background","borderTop","borderRadius","fontSize","onSubmit","_errors$user$_id","_errors$user$_id2","user_name","type","onChange","placeholder","width","id","readOnly","footerstyle","_c","$RefreshReg$"],"sources":["E:/EMS ARDENT FINAL GITHUB/ems/src/components/Addsalary.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Footer from \"./Footer\";\r\n// import { Link, useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Addsalary() {\r\n//   const [users, setUsers] = useState([]);\r\n//  const [formData,setFormData]=useState({\r\n//       basic_salary:\"\",\r\n//       allowance:\"\",\r\n//  })\r\n//  const navigate=useHistory()\r\n//  useEffect(() => {\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:3001/staffList\");\r\n//       setUsers(res.data);\r\n//     } catch (err) {\r\n//       console.log(\"Error fetching details\", err);\r\n//     }\r\n//   };\r\n\r\n//   fetchUsers();\r\n// }, []);\r\n//  const handleChange=(event)=>{\r\n//   let oldData={...formData}\r\n//   let inputValue=event.target.value;\r\n//   let inputName=event.target.name;\r\n//   oldData[inputName] = inputValue;\r\n//   setFormData(oldData)\r\n// };\r\n// function calculate(){\r\n//   let basicSalary=document.getElementById(\"basicSalary\").value;\r\n//   let alloWance= document.getElementById(\"alloWance\").value;\r\n//   var totalSalary=(basicSalary+alloWance)\r\n//   console.log(totalSalary);\r\n//   // id=\"total\"\r\n//  var  salary=document.getElementById(\"total\")\r\n//  salary.innerHTML=totalSalary;\r\n\r\n\r\n  \r\n// }\r\n// const handleSubmit=async(e)=>{\r\n//   e.preventDefault();\r\n//   if(validateForm()){\r\n\r\n//     try{\r\n//       const response=await axios.post(\"http://localhost:3001/addSalary\",formData);\r\n//       if(response.status===201){\r\n//         alert(\"Salary Added Succesfully!!!\")\r\n//         navigate.push('/manageSalary');\r\n//       }\r\n//       else\r\n//       {\r\n//         alert(\"Error adding salary details\")\r\n//       }\r\n//     } catch(error){\r\n//           // Handle error response\r\n//           if (error.response && error.response.status === 400) {\r\n//             alert(error.response.data.error); // Display the error message to the user\r\n//             alert(\"Error adding staffs for duplicate value. Try again with updated Data\");\r\n//           } else {\r\n//             console.error(\"Error adding staff:\", error);\r\n//           }\r\n//     }\r\n//   }\r\n// //Handel form submission\r\n\r\n// let currentUserFormData={\r\n//   basic_salary:formData.basic_salary,\r\n//   allowance:formData.allowance\r\n// };\r\n\r\n// let oldUserdata=[...users,currentUserFormData];\r\n// setUsers(oldUserdata)\r\n// console.log(formData)\r\n\r\n// //To empty the input fields after adding/getting the data\r\n// setFormData ({\r\n// basic_salary:\"\",\r\n// allowance:\"\",\r\n\r\n// })\r\n// }\r\n\r\n\r\n\r\n// const validateForm=()=>{\r\n//   const {\r\n//     basic_salary,\r\n//     allowance,\r\n//   }=formData;\r\n\r\n// const errors={};\r\n// if(!basic_salary.trim()){\r\n//   errors.basic_salary=\"Basic Salary is required\";\r\n//   document.getElementById(\"basic_salary\").focus();\r\n// } \r\n// else if(!allowance.trim()){\r\n//   errors.allowance=\"Allowance is required\";\r\n//   document.getElementById(\"allowance\").focus();\r\n// }\r\n\r\n\r\n// if (Object.keys(errors).length === 0) {\r\n//   return true;\r\n// } else {\r\n//   alert(Object.values(errors)[0]);\r\n//   return false;\r\n// }\r\n\r\n\r\n\r\n\r\n// };\r\n\r\n//   function calculate() {\r\n//     let n1 = parseInt(document.getElementById(\"basic_salary\").value);\r\n//     let n2 = parseInt(document.getElementById(\"allowance\").value);\r\n//     let sum = n1 + n2;\r\n//     document.getElementById(\"total\").value = sum;\r\n//   }\r\n\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <nav\r\n//         className=\"navbar navbar-expand-lg\"\r\n//         style={{ backgroundColor: \"rgb(0 77 255 / 65%)\" }}\r\n//       >\r\n//         {/* Navbar content */}\r\n//       </nav>\r\n//       <div className=\"container my-2\">\r\n//         <h2>Salary</h2>\r\n//       </div>\r\n//       <div className=\"container-fluid pt-3\" style={{ padding: \"100px\" }}>\r\n//         <div className=\"row d-flex justify-content-evenly\">\r\n//           <div style={{ background: \"white\", padding: \"21px\", borderTop: \"5px solid #004dffe8\", borderRadius: \"5px\" }}>\r\n//             <h5 style={{ fontSize: \"20px\" }} className=\"px-2\">\r\n//               Add Salary\r\n//             </h5>\r\n//             <hr />\r\n//             <div className=\"container\">\r\n//               <div className=\"row\">\r\n//                 <div className=\"col-md-4\">\r\n//                   <div className=\"mb-3\">\r\n//                     <b className=\"\">Department Name</b>\r\n//                     <select\r\n//                       className=\"form-control\"\r\n//                       style={{ border: \"1px solid\" }}\r\n//                     >\r\n//                       <option disabled defaultValue={\"--Department Name--\"}>\r\n//                         --Department Name--\r\n//                       </option>\r\n//                       <option>Backend developement</option>\r\n//                       <option>Designing</option>\r\n//                       <option>Front-end developement</option>\r\n//                       <option>Marketing</option>\r\n//                       <option>Finance</option>\r\n//                     </select>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"container m-3\">\r\n//               <div className=\"row p-3\">\r\n//                 {users.length > 0 ? (\r\n//                   <table>\r\n//                     <thead>\r\n//                       <tr>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\r\n//                           Staff\r\n//                         </th>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\r\n//                           Basic Salary($)\r\n//                         </th>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\r\n//                           Allowance($)\r\n//                         </th>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">\r\n//                           Total($)\r\n//                         </th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                       {users.map((user, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             {user.user_name}\r\n//                           </td>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             <input\r\n//                               type=\"text\"\r\n                              \r\n//                               id=\"basic_salary\"\r\n//                               name=\"basic_salary\"\r\n//                               placeholder=\"Enter the basic amount\"\r\n//                               value={formData.basic_salary}\r\n//                               onChange={handleChange}\r\n//                               onSubmit={handleSubmit}\r\n\r\n//                               style={{ width: \"100%\" }}\r\n//                             />\r\n//                           </td>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             <input\r\n//                               type=\"text\"\r\n//                               id=\"allowance\"\r\n//                               name=\"allowance\"\r\n//                               placeholder=\"Enter the basic amount\"\r\n//                               value={formData.allowance}\r\n//                               onChange={handleChange}\r\n//                               onSubmit={handleSubmit}\r\n//                               style={{ width: \"100%\" }}\r\n//                             />\r\n//                             {/* {error.allowance && <div className=\"text-danger\">{errors.allowance}</div>} */}\r\n//                           </td>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             <input\r\n//                               type=\"text\"\r\n//                               id=\"total\"\r\n//                               onChange={calculate}\r\n                              \r\n//                               readOnly\r\n//                               style={{ width: \"100%\" }}\r\n//                             />\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 ) : (\r\n//                   <div>No data available</div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"container\">\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 className=\"btn btn-success float-end\"\r\n//                 onClick={handleSubmit}\r\n//                 onSubmit={handleSubmit}\r\n//               >\r\n//                 Submit\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <Footer footerstyle=\"fixed-bottom\" />\r\n//     </>\r\n//   );\r\n// }\r\n// import React, { useEffect, useState } from \"react\";\r\n// import Footer from \"./Footer\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// export default function AddSalary() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     basic_salary: \"\",\r\n//     allowance: \"\"\r\n//   });\r\n//   const [errors, setErrors] = useState({});\r\n//   const navigate = useHistory();\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"http://localhost:3001/staffList\");\r\n//         setUsers(res.data);\r\n//       } catch (err) {\r\n//         console.log(\"Error fetching details\", err);\r\n//       }\r\n//     };\r\n\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const calculate = () => {\r\n//     const basicSalary = parseInt(formData.basic_salary);\r\n//     const allowance = parseInt(formData.allowance);\r\n//     const totalSalary = basicSalary + allowance;\r\n//     console.log(totalSalary);\r\n//     const salary = document.getElementById(\"total\");\r\n//     salary.value = totalSalary;\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (validateForm()) {\r\n//       try {\r\n//         const response = await axios.post(\"http://localhost:3001/addSalary\", formData);\r\n//         if (response.status === 201) {\r\n//           alert(\"Salary Added Successfully!!!\");\r\n//           navigate.push('/manageSalary');\r\n//         } else {\r\n//           alert(\"Error adding salary details\");\r\n//         }\r\n//       } catch (error) {\r\n//         if (error.response && error.response.status === 400) {\r\n//           alert(error.response.data.error);\r\n//           alert(\"Error adding staffs for duplicate value. Try again with updated Data\");\r\n//         } else {\r\n//           console.error(\"Error adding staff:\", error);\r\n//         }\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const { basic_salary, allowance } = formData;\r\n//     const errors = {};\r\n\r\n//     if (!basic_salary.trim()) {\r\n//       errors.basic_salary = \"Basic Salary is required\";\r\n//     }\r\n//     if (!allowance.trim()) {\r\n//       errors.allowance = \"Allowance is required\";\r\n//     }\r\n\r\n//     setErrors(errors);\r\n//     return Object.keys(errors).length === 0;\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <nav className=\"navbar navbar-expand-lg\" style={{ backgroundColor: \"rgb(0 77 255 / 65%)\" }}>\r\n//         {/* Navbar content */}\r\n//       </nav>\r\n//       <div className=\"container my-2\">\r\n//         <h2>Salary</h2>\r\n//       </div>\r\n//       <div className=\"container-fluid pt-3\" style={{ padding: \"100px\" }}>\r\n//         <div className=\"row d-flex justify-content-evenly\">\r\n//           <div style={{ background: \"white\", padding: \"21px\", borderTop: \"5px solid #004dffe8\", borderRadius: \"5px\" }}>\r\n//             <h5 style={{ fontSize: \"20px\" }} className=\"px-2\">Add Salary</h5>\r\n//             <hr />\r\n//             <form onSubmit={handleSubmit}>\r\n//               <div className=\"container m-3\">\r\n//                 <div className=\"row p-3\">\r\n//                   <table>\r\n//                     <thead>\r\n//                       <tr>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Staff</th>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Basic Salary($)</th>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Allowance($)</th>\r\n//                         <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Total($)</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                       {users.map((user, index) => (\r\n//                         <tr key={index}>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">{user.user_name}</td>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             <input\r\n//                               type=\"text\"\r\n//                               name=\"basic_salary\"\r\n//                               value={formData.basic_salary}\r\n//                               onChange={handleChange}\r\n//                               placeholder=\"Enter the basic amount\"\r\n//                               style={{ width: \"100%\" }}\r\n//                             />\r\n//                             {errors.basic_salary && <div className=\"text-danger\">{errors.basic_salary}</div>}\r\n//                           </td>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             <input\r\n//                               type=\"text\"\r\n//                               name=\"allowance\"\r\n//                               value={formData.allowance}\r\n//                               onChange={handleChange}\r\n//                               placeholder=\"Enter the basic amount\"\r\n//                               style={{ width: \"100%\" }}\r\n//                             />\r\n//                             {errors.allowance && <div className=\"text-danger\">{errors.allowance}</div>}\r\n//                           </td>\r\n//                           <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n//                             <input\r\n//                               type=\"text\"\r\n//                               id=\"total\"\r\n//                               onChange={calculate}\r\n//                               readOnly\r\n//                               style={{ width: \"100%\" }}\r\n//                             />\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"container\">\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   className=\"btn btn-success float-end\"\r\n//                 >\r\n//                   Submit\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <Footer footerstyle=\"fixed-bottom\" />\r\n//     </>\r\n//   );\r\n// }\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AddSalary() {\r\n  const [users, setUsers] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    basic_salary: \"\",\r\n    allowance: \"\"\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:3001/staffList\");\r\n        setUsers(res.data);\r\n      } catch (err) {\r\n        console.log(\"Error fetching details\", err);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleChange = (event, userId) => {\r\n    const { name, value } = event.target;\r\n    const updatedUsers = users.map((user) => {\r\n      if (user._id === userId) {\r\n        return { ...user, [name]: value };\r\n      }\r\n      return user;\r\n    });\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  const calculateTotal = (basicSalary, allowance) => {\r\n    const total = parseInt(basicSalary) + parseInt(allowance);\r\n    return isNaN(total) ? \"\" : total;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:3001/addSalary\", users);\r\n        if (response.status === 201) {\r\n          alert(\"Salary Added Successfully!!!\");\r\n          navigate.push('/manageSalary');\r\n        } else {\r\n          alert(\"Error adding salary details\");\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 400) {\r\n          alert(error.response.data.error);\r\n          alert(\"Error adding staffs for duplicate value. Try again with updated Data\");\r\n        } else {\r\n          console.error(\"Error adding staff:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    users.forEach((user) => {\r\n      if (!user.basic_salary.trim()) {\r\n        errors[user._id] = { ...errors[user._id], basic_salary: \"Basic Salary is required\" };\r\n      }\r\n      if (!user.allowance.trim()) {\r\n        errors[user._id] = { ...errors[user._id], allowance: \"Allowance is required\" };\r\n      }\r\n    });\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg\" style={{ backgroundColor: \"rgb(0 77 255 / 65%)\" }}>\r\n        {/* Navbar content */}\r\n      </nav>\r\n      <div className=\"container my-2\">\r\n        <h2>Salary</h2>\r\n      </div>\r\n      <div className=\"container-fluid pt-3\" style={{ padding: \"100px\" }}>\r\n        <div className=\"row d-flex justify-content-evenly\">\r\n          <div style={{ background: \"white\", padding: \"21px\", borderTop: \"5px solid #004dffe8\", borderRadius: \"5px\" }}>\r\n            <h5 style={{ fontSize: \"20px\" }} className=\"px-2\">Add Salary</h5>\r\n            <hr />\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"container m-3\">\r\n                <div className=\"row p-3\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Staff</th>\r\n                        <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Basic Salary($)</th>\r\n                        <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Allowance($)</th>\r\n                        <th className=\"col-md-3 text-center bg- p-1 px-2 tablestyle\">Total($)</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {users.map((user) => (\r\n                        <tr key={user._id}>\r\n                          <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">{user.user_name}</td>\r\n                          <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"basic_salary\"\r\n                              value={formData.basic_salary}\r\n                              onChange={(e) => handleChange(e, user._id)}\r\n                              placeholder=\"Enter the basic amount\"\r\n                              style={{ width: \"100%\" }}\r\n                            />\r\n                            {errors[user._id]?.basic_salary && <div className=\"text-danger\">{errors[user._id].basic_salary}</div>}\r\n                          </td>\r\n                          <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"allowance\"\r\n                              name=\"allowance\"\r\n                              value={formData.allowance}\r\n                              onChange={(e) => handleChange(e, user._id)}\r\n                              placeholder=\"Enter the allowance\"\r\n                              style={{ width: \"100%\" }}\r\n                            />\r\n                            {errors[user._id]?.allowance && <div className=\"text-danger\">{errors[user._id].allowance}</div>}\r\n                          </td>\r\n                          <td className=\"col-md-3 bg- p-1 px-2 tablestyle\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value={calculateTotal(user.basic_salary, user.allowance)}\r\n                              readOnly\r\n                              style={{ width: \"100%\" }}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"container\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success float-end\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer footerstyle=\"fixed-bottom\" />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMk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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}